#!/usr/bin/env sos-runner
#fileformat=SOS1.0

# conda and SoS
[sos_setup]
bash:
    install_dir='/opt/miniconda3'
    curl -fsSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh && sudo bash /tmp/miniconda.sh -bfp $install_dir
    echo "export PATH=$install_dir/bin:\$PATH" >> ~/.bashrc && source ~/.bashrc
    sudo chown -R $USER.users $install_dir && mkdir -p ~/.conda && sudo chown -R $USER.users ~/.conda
    conda install -c conda-forge -y sos

# apt-get commands
[ubuntu_bionic_1]
packages = "git wget less unzip gzip bzip2 apt-transport-https ca-certificates dirmngr gpg-agent software-properties-common \
            cmake build-essential gfortran libgfortran-6-dev libgomp1 libgsl-dev libatlas3-base liblapack-dev \
            zlib1g-dev libbz2-dev liblzma-dev libsqlite3-dev libxml2-dev libc6-dev \
            libcurl4-openssl-dev libssl-dev libssh2-1-dev openssh-server openssh-client rsync vim vim-gtk3 nano trash-cli \
            texlive-full python-pygments fonts-wqy-microhei ttf-wqy-microhei fonts-wqy-zenhei ttf-wqy-zenhei \
            pandoc ghostscript graphviz libmagickwand-dev \
            smartmontools lm-sensors htop dos2unix tree sshpass acl fcitx fcitx-config-gtk terminator"
bash: expand = True
    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 && \
    sudo add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/' && \
    sudo apt-get update && \
    sudo apt install -y {packages} r-base r-base-dev libatlas3-base && \
    sudo apt-get clean
    # A hack for ImageMagick policy issue
    # to allow view PDF files in SoS Notebook
    sudo sed -i 's/<policy domain="coder" rights="none" pattern="PDF" \/>/<policy domain="coder" rights="read|write" pattern="PDF" \/>/g' /etc/ImageMagick-6/policy.xml

# docker
[ubuntu_bionic_2]
bash:
    curl -fsSL get.docker.com -o /tmp/get-docker.sh && sudo sh /tmp/get-docker.sh && \
    sudo usermod -aG docker $USER

# Python and conda based tools
[ubuntu_bionic_3]
bioconda_pkgs = "cyvcf2 bedtools plink vcftools bcftools bedops tabix htslib"
pip_pkgs = "notebook jupyterlab jupyter_contrib_nbextensions bash_kernel markdown-kernel jupyter-docx-bundler nbdime \
            docker markdown wand graphviz imageio pillow nbformat feather-format \
            sos-notebook sos-r sos-python sos-bash"
bash: expand = True
    conda install -c bioconda {bioconda_pkgs}
    conda install -c conda-forge nodejs
    pip install {pip_pkgs} --no-cache-dir
    python -m bash_kernel.install
    python -m markdown_kernel.install
    jupyter bundlerextension enable --py jupyter_docx_bundler --sys-prefix
    nbdime config-git --enable --global
    python -m sos_notebook.install
    jupyter labextension install transient-display-data
    jupyter labextension install jupyterlab-sos

# R packages
[ubuntu_bionic_4]
pkg = ['dplyr', 'stringr', 'readr', 'magrittr', 'ggplot2', 'cowplot', 'feather', 'devtools', 'IRkernel']
input: for_each = 'pkg', group_by = 1, concurrent = False
R: expand = True
    if (!("{_pkg}" %in% rownames(installed.packages()))) install.packages("{_pkg}", repos = 'http://cran.rstudio.com')
    if ("{_pkg}" == "IRkernel") IRkernel::installspec()

# Other third party deb packages
[ubuntu_bionic_5]
parameter: dpkg = ["google-chrome-stable_current_amd64.deb", "slack-desktop-4.3.2-amd64.deb", "code_1.41.1-1576681836_amd64.deb", "insync_3.0.28.40721-bionic_amd64.deb", "virtualbox-6.1_6.1.2-135662_Ubuntu_bionic_amd64.deb", "sogoupinyin_2.3.1.0112_amd64.deb"]
input: dpkg, group_by = 1, concurrent = False
bash: expand = True
    # Try to install first, and fix it if the initial installation failed due to uninstalled dependencies.
    sudo dpkg -i {_input} || sudo apt-get install -f -y

# Configure bashrc
[ubuntu_bionic_6]
bash:
    echo '''
    function nb() { jupyter-lab $@ &> /dev/null & }
    function cd-tmp() {
        dest=$HOME/tmp/$(date '+%d-%b-%Y')
        mkdir -p $dest && cd $dest
    }
    ''' >> ~/.bashrc

# Stephenslab R packages
[stephenslab]
pkg = ['mixsqp', 'flashr', 'mashr', 'susieR', 'mmbr']
input: for_each = 'pkg', group_by = 1, concurrent = False
R: expand = True
    remotes::install_github('stephenslab/{_pkg}')

# CSG packages
[csg]
igv = '2.8'
bash: expand = True, workdir = '/tmp'
    wget https://data.broadinstitute.org/igv/projects/downloads/{igv_version}/IGV_Linux_{igv_version}.0.zip \
    && unzip IGV_Linux_{igv_version}.0.zip \
    sudo mv IGV_Linux_2.8.0 /opt/IGV
    sudo ln -s /opt/IGV/igv.sh /usr/local/bin/igv